{"version":3,"file":"main.js","sources":["../electron/socket-client.ts","../electron/network-socket-client.ts","../electron/ram-socket-client.ts","../electron/main.ts"],"sourcesContent":["import * as net from 'net';\n\nconst SOCKET_PATH = '/tmp/cpu_optimizer.sock';\n\nexport class SocketClient {\n  private async sendCommand(command: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const client = net.createConnection(SOCKET_PATH);\n      \n      client.on('connect', () => {\n        client.write(JSON.stringify(command));\n      });\n      \n      client.on('data', (data) => {\n        try {\n          const response = data.toString().trim();\n          if (response.startsWith('{') || response.startsWith('[')) {\n            resolve(JSON.parse(response));\n          } else {\n            resolve(response);\n          }\n        } catch (error) {\n          resolve(data.toString().trim());\n        }\n        client.end();\n      });\n      \n      client.on('error', (error) => {\n        reject(error);\n      });\n    });\n  }\n\n  async getProcesses(): Promise<any[]> {\n    try {\n      const result = await this.sendCommand({ action: 'cpu_print_processes' });\n      return Array.isArray(result) ? result : [];\n    } catch (error) {\n      console.error('Error getting processes:', error);\n      return [];\n    }\n  }\n\n  async getProcessorInfo(): Promise<any> {\n    try {\n      const result = await this.sendCommand({ action: 'cpu_processor_info' });\n      return result || {};\n    } catch (error) {\n      console.error('Error getting processor info:', error);\n      return {};\n    }\n  }\n\n  async getWhitelist(): Promise<string[]> {\n    try {\n      const result = await this.sendCommand({ action: 'cpu_list_whitelist' });\n      return Array.isArray(result) ? result : [];\n    } catch (error) {\n      console.error('Error getting whitelist:', error);\n      return [];\n    }\n  }\n\n  async optimizeProcess(name: string, level: string): Promise<boolean> {\n    try {\n      const result = await this.sendCommand({ \n        action: 'cpu_optimize', \n        name, \n        level \n      });\n      return result === 'Optimized';\n    } catch (error) {\n      console.error('Error optimizing process:', error);\n      return false;\n    }\n  }\n\n  async restoreProcess(name: string): Promise<boolean> {\n    try {\n      const result = await this.sendCommand({ \n        action: 'cpu_restore', \n        name \n      });\n      return result === 'Restored';\n    } catch (error) {\n      console.error('Error restoring process:', error);\n      return false;\n    }\n  }\n\n  async restoreAll(): Promise<boolean> {\n    try {\n      const result = await this.sendCommand({ action: 'cpu_restore_all' });\n      return result === 'All Restored';\n    } catch (error) {\n      console.error('Error restoring all processes:', error);\n      return false;\n    }\n  }\n\n  async addToWhitelist(name: string): Promise<boolean> {\n    try {\n      const result = await this.sendCommand({ \n        action: 'cpu_add_whitelist', \n        name \n      });\n      return result === 'Added to whitelist';\n    } catch (error) {\n      console.error('Error adding to whitelist:', error);\n      return false;\n    }\n  }\n\n  async removeFromWhitelist(name: string): Promise<boolean> {\n    try {\n      const result = await this.sendCommand({ \n        action: 'cpu_remove_whitelist', \n        name \n      });\n      return result === 'Removed from whitelist';\n    } catch (error) {\n      console.error('Error removing from whitelist:', error);\n      return false;\n    }\n  }\n}","import * as net from 'net';\n\nconst NETWORK_SOCKET_PATH = '/tmp/network_optimizer.sock';\n\nexport class NetworkSocketClient {\n  private async sendCommand(command: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const client = net.createConnection(NETWORK_SOCKET_PATH);\n\n      client.on('connect', () => {\n        client.write(JSON.stringify(command));\n      });\n\n      client.on('data', (data) => {\n        try {\n          const response = data.toString().trim();\n          if (response.startsWith('{') || response.startsWith('[')) {\n            resolve(JSON.parse(response));\n          } else {\n            resolve(response);\n          }\n        } catch (error) {\n          resolve(data.toString().trim());\n        }\n        client.end();\n      });\n\n      client.on('error', (error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // TODO: Register this endpoint in main.ts\n  // Endpoint: network:get-usage\n  async getNetworkUsage(): Promise<any[]> {\n    try {\n      const result = await this.sendCommand({ action: 'network_get_usage' });\n      return Array.isArray(result) ? result : [];\n    } catch (error) {\n      console.error('Error getting network usage:', error);\n      return [];\n    }\n  }\n\n  // TODO: Register this endpoint in main.ts  \n  // Endpoint: network:set-speed-cap\n  async setSpeedCap(appName: string, speedMBps: number): Promise<boolean> {\n    try {\n      const result = await this.sendCommand({\n        action: 'network_set_speed_cap',\n        app_name: appName,\n        speed_mbps: speedMBps\n      });\n      return result === 'Speed cap set';\n    } catch (error) {\n      console.error('Error setting speed cap:', error);\n      return false;\n    }\n  }\n\n  // TODO: Register this endpoint in main.ts\n  // Endpoint: network:reset-cap  \n  async resetCap(appName: string): Promise<boolean> {\n    try {\n      const result = await this.sendCommand({\n        action: 'network_reset_cap',\n        app_name: appName\n      });\n      return result === 'Speed cap reset';\n    } catch (error) {\n      console.error('Error resetting speed cap:', error);\n      return false;\n    }\n  }\n\n  async networkOverall(): Promise<any> {\n    try {\n      console.log(\"In the send command block of network overall\")\n      const result = await this.sendCommand({\n        action: 'network_get_overall',\n      });\n      return result;\n    } catch (error) {\n      console.error('Error resetting speed cap:', error);\n      return false;\n    }\n\n  }\n}","import * as net from 'net';\n\nconst RAM_SOCKET_PATH = '/tmp/ram_optimizer.sock';\n\nexport class RamSocketClient {\n  private async sendCommand(command: any): Promise<any> {\n    return new Promise((resolve, reject) => {\n      const client = net.createConnection(RAM_SOCKET_PATH);\n\n      client.on('connect', () => {\n        client.write(JSON.stringify(command));\n      });\n\n      client.on('data', (data) => {\n        try {\n          const response = data.toString().trim();\n          resolve(JSON.parse(response));\n        } catch {\n          resolve(data.toString().trim());\n        }\n        client.end();\n      });\n\n      client.on('error', (error) => {\n        reject(error);\n      });\n    });\n  }\n\n  // ðŸ§  RAM usage summary\n  async getSystemRamUsage(): Promise<any> {\n    return this.sendCommand({ action: 'ram:get-system-usage' });\n  }\n\n  // ðŸ“‹ Top RAM-consuming processes\n  async getTopRamProcesses(): Promise<any[]> {\n    return this.sendCommand({ action: 'ram:get-top-processes' });\n  }\n}\n","import { app } from 'electron';\napp.commandLine.appendSwitch('no-sandbox');\n\nimport { BrowserWindow, ipcMain } from 'electron';\nimport { fileURLToPath } from 'node:url';\nimport path from 'node:path';\nimport { SocketClient } from './socket-client.js';\nimport { NetworkSocketClient } from './network-socket-client.js';\nimport { RamSocketClient } from './ram-socket-client.js';\nimport fs from 'fs';\nimport os from 'os';\n\nconst __dirname = path.dirname(fileURLToPath(import.meta.url));\n\nprocess.env.APP_ROOT = path.join(__dirname, '../..');\n\nexport const MAIN_DIST = path.join(process.env.APP_ROOT, 'dist-electron');\nexport const RENDERER_DIST = path.join(process.env.APP_ROOT, 'dist');\nexport const VITE_DEV_SERVER_URL = process.env.VITE_DEV_SERVER_URL;\n\nprocess.env.VITE_PUBLIC = VITE_DEV_SERVER_URL\n  ? path.join(process.env.APP_ROOT, 'public')\n  : RENDERER_DIST;\n\nlet win: BrowserWindow | null = null;\nlet socketClient: SocketClient;\nlet networkSocketClient: NetworkSocketClient;\nlet ramSocketClient: RamSocketClient;\n\nconst LOG_PATH = path.join(os.homedir(), 'cpu-monitor.log');\nconst log = (msg: string) => fs.appendFileSync(LOG_PATH, `[${new Date().toISOString()}] ${msg}\\n`);\n\nlog(`APP_ROOT: ${process.env.APP_ROOT}`);\nlog(`MAIN_DIST: ${MAIN_DIST}`);\nlog(`RENDERER_DIST: ${RENDERER_DIST}`);\nlog(`index.html exists: ${fs.existsSync(path.join(RENDERER_DIST, 'index.html'))}`);\n\nfunction createWindow() {\n  log(`Loading: ${VITE_DEV_SERVER_URL || path.join(RENDERER_DIST, 'index.html')}`);\n  win = new BrowserWindow({\n    width: 1400,\n    height: 900,\n    minWidth: 1200,\n    minHeight: 800,\n    webPreferences: {\n      nodeIntegration: false,\n      contextIsolation: true,\n      preload: path.join(__dirname, 'preload.js'),\n      sandbox: false, // Disable sandbox for development\n    },\n    titleBarStyle: 'default',\n    frame: true,\n    show: false,\n  });\n\n  win.on('ready-to-show', () => {\n    win?.show();\n  });\n\n  if (VITE_DEV_SERVER_URL) {\n    win.loadURL(VITE_DEV_SERVER_URL);\n  } else {\n    win.loadFile(path.join(RENDERER_DIST, 'index.html'));\n  }\n}\n\napp.whenReady().then(() => {\n  try {\n\n\n\n\n    createWindow();\n\n    socketClient = new SocketClient();\n    networkSocketClient = new NetworkSocketClient();\n    ramSocketClient = new RamSocketClient();\n    registerIpcHandlers();\n\n    console.log(\"IPC handlers registered.\");\n  } catch (err) {\n    console.error(\"Error during app startup:\", err);\n  }\n});\n\n\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit();\n    win = null;\n  }\n});\n\napp.on('activate', () => {\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow();\n  }\n});\n\nfunction registerIpcHandlers() {\n  // CPU Socket Endpoints\n  ipcMain.handle('cpu:get-processes', async () => {\n    return await socketClient.getProcesses();\n  });\n\n  ipcMain.handle('cpu:get-processor-info', async () => {\n    return await socketClient.getProcessorInfo();\n  });\n\n  ipcMain.handle('cpu:get-whitelist', async () => {\n    return await socketClient.getWhitelist();\n  });\n\n  ipcMain.handle('cpu:optimize', async (_, name: string, level: string) => {\n    return await socketClient.optimizeProcess(name, level);\n  });\n\n  ipcMain.handle('cpu:restore', async (_, name: string) => {\n    return await socketClient.restoreProcess(name);\n  });\n\n  ipcMain.handle('cpu:restore-all', async () => {\n    return await socketClient.restoreAll();\n  });\n\n  ipcMain.handle('cpu:add-whitelist', async (_, name: string) => {\n    return await socketClient.addToWhitelist(name);\n  });\n\n  ipcMain.handle('cpu:remove-whitelist', async (_, name: string) => {\n    return await socketClient.removeFromWhitelist(name);\n  });\n\n  // TODO: Network Socket Endpoints - Register these when network socket is ready\n  // These endpoints will communicate with /tmp/network_optimizer.sock\n\n  ipcMain.handle('network:get-usage', async () => {\n    return await networkSocketClient.getNetworkUsage();\n  });\n\n  ipcMain.handle('network:set-speed-cap', async (_, appName: string, speedMBps: number) => {\n    return await networkSocketClient.setSpeedCap(appName, speedMBps);\n  });\n  ipcMain.handle('network:get-usage-overall', async () => {\n    console.log(\"request for network overall being sent\");\n    return await networkSocketClient.networkOverall();\n  })\n\n  ipcMain.handle('network:reset-cap', async (_, appName: string) => {\n    return await networkSocketClient.resetCap(appName);\n  });\n\n  ipcMain.handle('ram:get-system-usage', async () => {\n    try {\n      return await ramSocketClient.getSystemRamUsage();\n    } catch (err) {\n      return { error: 'Failed to get RAM usage', details: err.message };\n    }\n  });\n\n  // Register IPC endpoint: Get top RAM-consuming processes\n  ipcMain.handle('ram:get-top-processes', async () => {\n    try {\n      return await ramSocketClient.getTopRamProcesses();\n    } catch (err) {\n      return { error: 'Failed to get process list', details: err.message };\n    }\n  });\n}"],"names":["SOCKET_PATH","SocketClient","command","resolve","reject","client","net","data","response","error","result","name","level","NETWORK_SOCKET_PATH","NetworkSocketClient","appName","speedMBps","RAM_SOCKET_PATH","RamSocketClient","app","__dirname","path","fileURLToPath","_documentCurrentScript","MAIN_DIST","RENDERER_DIST","VITE_DEV_SERVER_URL","win","socketClient","networkSocketClient","ramSocketClient","LOG_PATH","os","log","msg","fs","createWindow","BrowserWindow","registerIpcHandlers","err","ipcMain","_"],"mappings":"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"}